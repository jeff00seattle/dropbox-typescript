{"version":3,"file":"github.js","sourceRoot":"","sources":["../../lib/github.ts"],"names":[],"mappings":";;AAAA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC,SAAgB,gBAAgB,CAAC,QAAgB,EAAE,QAAQ;IACzD,MAAM,OAAO,GAAG;QACd,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,gCAAgC,QAAQ,YAAY;QACzD,OAAO,EAAE,EAAE,YAAY,EAAE,qBAAqB,EAAE,eAAe,EAAE,UAAU,EAAE;KAC9E,CAAC;IAEF,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QAClC,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAChD,OAAO,QAAQ,CAAC,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAC3B;aAAM;YACL,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;SACnC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAjBD,4CAiBC;AAED,SAAgB,OAAO,CAAC,QAAgB,EAAE,QAAQ;IAChD,MAAM,OAAO,GAAG;QACd,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,gCAAgC,QAAQ,EAAE;QAC/C,OAAO,EAAE,EAAE,YAAY,EAAE,qBAAqB,EAAE,eAAe,EAAE,UAAU,EAAE;KAC9E,CAAC;IAEF,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QAClC,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAE9B,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACtB;aAAM;YACL,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;SACnC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAhBD,0BAgBC","sourcesContent":["const request = require('request');\n\nexport function getUserFollowers(username: string, callback): void {\n  const options = {\n    method: 'GET',\n    url: `https://api.github.com/users/${username}/followers`,\n    headers: { 'User-Agent': 'Awesome-Octocat-App', 'cache-control': 'no-cache' }\n  };\n\n  request(options, (err, res, body) => {\n    if (!err) {\n      const followers = JSON.parse(body).map(follower => {\n        return follower.login;\n      });\n      callback(null, followers);\n    } else {\n      callback('Error Occurred!', null);\n    }\n  });\n}\n\nexport function getUser(username: string, callback): void {\n  const options = {\n    method: 'GET',\n    url: `https://api.github.com/users/${username}`,\n    headers: { 'User-Agent': 'Awesome-Octocat-App', 'cache-control': 'no-cache' }\n  };\n\n  request(options, (err, res, body) => {\n    if (!err) {\n      const user = JSON.parse(body);\n\n      callback(null, user);\n    } else {\n      callback('Error Occurred!', null);\n    }\n  });\n}\n"]}