{"version":3,"file":"request.js","sourceRoot":"","sources":["../../lib/request.ts"],"names":[],"mappings":";;AACA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,8BAAa,CAAA;IACb,4BAAW,CAAA;IACX,kCAAiB,CAAA;IACjB,4BAAW,CAAA;IACX,gCAAe,CAAA;AACjB,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;AAkBD,MAAa,OAAO;IACR,KAAK,CAAC,GAAG,CAAC,OAAuB;QACzC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;gBACzC,IAAI,KAAK,EAAE;oBACT,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;iBACtB;gBAED,OAAO,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAES,KAAK,CAAC,IAAI,CAAC,OAAuB;QAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;gBACzC,IAAI,KAAK,EAAE;oBACT,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;iBACtB;gBAED,OAAO,OAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI;QAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;QAElD,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,QAAQ;QACnB,OAAO,CAAC,KAAK,CAAC,WAAW,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,KAAK,CAAC,YAAY,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;IACtD,CAAC;IAES,QAAQ,CAAC,MAAc,EAAE,YAAY;QAC7C,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;YACxC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC9B;QAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,YAAY,EAAE;YACxD,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACjD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAhDD,0BAgDC","sourcesContent":["import { Url } from 'url';\nconst request = require('request');\n\nexport enum RequestMethod {\n  POST = 'POST',\n  GET = 'GET',\n  DELETE = 'DELETE',\n  PUT = 'PUT',\n  PATCH = 'PATCH'\n}\n\nexport interface RequestOptions {\n  method: RequestMethod;\n  url: string | Url;\n  headers?: object;\n  body?: object;\n  json: boolean;\n}\n\nexport interface RequestResponse {\n  response: {\n    statusCode: number;\n    statusMessage: string;\n  };\n  body?: {};\n}\n\nexport class Request {\n  protected async get(options: RequestOptions): Promise<RequestResponse> {\n    return new Promise((resolve, reject) => {\n      request(options, (error, response, body) => {\n        if (error) {\n          return reject(error);\n        }\n\n        return resolve({ body, response });\n      });\n    });\n  }\n\n  protected async post(options: RequestOptions): Promise<RequestResponse> {\n    return new Promise((resolve, reject) => {\n      request(options, (error, response, body) => {\n        if (error) {\n          return reject(error);\n        }\n\n        return resolve({ body, response });\n      });\n    });\n  }\n\n  static success(response, body) {\n    console.log(`Status: ${response.statusCode}`);\n    console.log(`Message: ${response.statusMessage}`);\n\n    console.log(`Body: ${JSON.stringify(body, null, 2)}`);\n  }\n\n  static error(response) {\n    console.error(`Status: ${response.statusCode}`);\n    console.error(`Message: ${response.statusMessage}`);\n  }\n\n  protected trimChar(entity: string, charToRemove) {\n    while (entity.charAt(0) === charToRemove) {\n      entity = entity.substring(1);\n    }\n\n    while (entity.charAt(entity.length - 1) === charToRemove) {\n      entity = entity.substring(0, entity.length - 1);\n    }\n\n    return entity;\n  }\n}\n"]}